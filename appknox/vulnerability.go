package appknox

import (
	"context"
	"fmt"
)

// VulnerabilitiesService is used to interact with appknox vulnerability api.
type VulnerabilitiesService service

// Vulnerability represents a Appknox vulnerability object.
type Vulnerability struct {
	ID           int    `json:"id,omitempty"`
	Name         string `json:"name,omitempty"`
	Description  string `json:"description,omitempty"`
	Intro        string `json:"intro,omitempty"`
	Findings     string	`json:"findings,omitempty"`
	Compliant    string `json:"compliant,omitempty"`
	NonCompliant string `json:"non_compliant,omitempty"`
}

// GetByID will get a vulnerability by id.
func (s *VulnerabilitiesService) GetByID(ctx context.Context, vulnerabilityID int) (*Vulnerability, *Response, error) {
	u := fmt.Sprintf("api/v2/vulnerabilities/%v", vulnerabilityID)
	req, err := s.client.NewRequest("GET", u, nil)
	if err != nil {
		return nil, nil, err
	}
	var vulnerabilityResponse Vulnerability
	resp, err := s.client.Do(ctx, req, &vulnerabilityResponse)
	return &vulnerabilityResponse, resp, nil
}
